//
// HeroItemPopularityResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct HeroItemPopularityResponse: Codable, JSONEncodable, Hashable {

    public var startGameItems: HeroItemPopularityResponseStartGameItems?
    public var earlyGameItems: HeroItemPopularityResponseEarlyGameItems?
    public var midGameItems: HeroItemPopularityResponseMidGameItems?
    public var lateGameItems: HeroItemPopularityResponseLateGameItems?

    public init(startGameItems: HeroItemPopularityResponseStartGameItems? = nil, earlyGameItems: HeroItemPopularityResponseEarlyGameItems? = nil, midGameItems: HeroItemPopularityResponseMidGameItems? = nil, lateGameItems: HeroItemPopularityResponseLateGameItems? = nil) {
        self.startGameItems = startGameItems
        self.earlyGameItems = earlyGameItems
        self.midGameItems = midGameItems
        self.lateGameItems = lateGameItems
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case startGameItems = "start_game_items"
        case earlyGameItems = "early_game_items"
        case midGameItems = "mid_game_items"
        case lateGameItems = "late_game_items"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(startGameItems, forKey: .startGameItems)
        try container.encodeIfPresent(earlyGameItems, forKey: .earlyGameItems)
        try container.encodeIfPresent(midGameItems, forKey: .midGameItems)
        try container.encodeIfPresent(lateGameItems, forKey: .lateGameItems)
    }
}

