//
// PlayerRatingsResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PlayerRatingsResponse: Codable, JSONEncodable, Hashable {

    /** The player account ID */
    public var accountId: Int?
    /** The ID number of the match assigned by Valve */
    public var matchId: Int?
    /** solo_competitive_rank */
    public var soloCompetitiveRank: Int?
    /** competitive_rank */
    public var competitiveRank: Int?
    /** time */
    public var time: Int?

    public init(accountId: Int? = nil, matchId: Int? = nil, soloCompetitiveRank: Int? = nil, competitiveRank: Int? = nil, time: Int? = nil) {
        self.accountId = accountId
        self.matchId = matchId
        self.soloCompetitiveRank = soloCompetitiveRank
        self.competitiveRank = competitiveRank
        self.time = time
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case accountId = "account_id"
        case matchId = "match_id"
        case soloCompetitiveRank = "solo_competitive_rank"
        case competitiveRank = "competitive_rank"
        case time
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(accountId, forKey: .accountId)
        try container.encodeIfPresent(matchId, forKey: .matchId)
        try container.encodeIfPresent(soloCompetitiveRank, forKey: .soloCompetitiveRank)
        try container.encodeIfPresent(competitiveRank, forKey: .competitiveRank)
        try container.encodeIfPresent(time, forKey: .time)
    }
}

