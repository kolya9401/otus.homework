//
// ScenarioMiscResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ScenarioMiscResponse: Codable, JSONEncodable, Hashable {

    /** The scenario's name or description */
    public var scenario: String?
    /** Boolean indicating whether Radiant executed this scenario */
    public var isRadiant: Bool?
    /** Region the game was played in */
    public var region: Int?
    /** The number of games where this scenario occurred */
    public var games: String?
    /** The number of games won where this scenario occured */
    public var wins: String?

    public init(scenario: String? = nil, isRadiant: Bool? = nil, region: Int? = nil, games: String? = nil, wins: String? = nil) {
        self.scenario = scenario
        self.isRadiant = isRadiant
        self.region = region
        self.games = games
        self.wins = wins
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case scenario
        case isRadiant = "is_radiant"
        case region
        case games
        case wins
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(scenario, forKey: .scenario)
        try container.encodeIfPresent(isRadiant, forKey: .isRadiant)
        try container.encodeIfPresent(region, forKey: .region)
        try container.encodeIfPresent(games, forKey: .games)
        try container.encodeIfPresent(wins, forKey: .wins)
    }
}

