//
// ProMatchesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ProMatchesAPI {

    /**
     GET /proMatches
     
     - parameter lessThanMatchId: (query) Get matches with a match ID lower than this value (optional)
     - returns: [MatchObjectResponse]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getProMatches(lessThanMatchId: Int? = nil) async throws -> [MatchObjectResponse] {
        return try await getProMatchesWithRequestBuilder(lessThanMatchId: lessThanMatchId).execute().body
    }

    /**
     GET /proMatches
     - GET /proMatches
     - Get list of pro matches
     - parameter lessThanMatchId: (query) Get matches with a match ID lower than this value (optional)
     - returns: RequestBuilder<[MatchObjectResponse]> 
     */
    open class func getProMatchesWithRequestBuilder(lessThanMatchId: Int? = nil) -> RequestBuilder<[MatchObjectResponse]> {
        let localVariablePath = "/proMatches"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "less_than_match_id": (wrappedValue: lessThanMatchId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[MatchObjectResponse]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
