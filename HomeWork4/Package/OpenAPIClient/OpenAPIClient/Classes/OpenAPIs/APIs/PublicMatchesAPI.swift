//
// PublicMatchesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PublicMatchesAPI {

    /**
     GET /publicMatches
     
     - parameter lessThanMatchId: (query) Get matches with a match ID lower than this value (optional)
     - parameter minRank: (query) Minimum rank for the matches. Ranks are represented by integers (10-15: Herald, 20-25: Guardian, 30-35: Crusader, 40-45: Archon, 50-55: Legend, 60-65: Ancient, 70-75: Divine, 80-85: Immortal). Each increment represents an additional star. (optional)
     - parameter maxRank: (query) Maximum rank for the matches. Ranks are represented by integers (10-15: Herald, 20-25: Guardian, 30-35: Crusader, 40-45: Archon, 50-55: Legend, 60-65: Ancient, 70-75: Divine, 80-85: Immortal). Each increment represents an additional star. (optional)
     - parameter mmrAscending: (query) Order by average rank ascending (optional)
     - parameter mmrDescending: (query) Order by average rank descending (optional)
     - returns: [PublicMatchesResponse]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getPublicMatches(lessThanMatchId: Int? = nil, minRank: Int? = nil, maxRank: Int? = nil, mmrAscending: Int? = nil, mmrDescending: Int? = nil) async throws -> [PublicMatchesResponse] {
        return try await getPublicMatchesWithRequestBuilder(lessThanMatchId: lessThanMatchId, minRank: minRank, maxRank: maxRank, mmrAscending: mmrAscending, mmrDescending: mmrDescending).execute().body
    }

    /**
     GET /publicMatches
     - GET /publicMatches
     - Get list of randomly sampled public matches
     - parameter lessThanMatchId: (query) Get matches with a match ID lower than this value (optional)
     - parameter minRank: (query) Minimum rank for the matches. Ranks are represented by integers (10-15: Herald, 20-25: Guardian, 30-35: Crusader, 40-45: Archon, 50-55: Legend, 60-65: Ancient, 70-75: Divine, 80-85: Immortal). Each increment represents an additional star. (optional)
     - parameter maxRank: (query) Maximum rank for the matches. Ranks are represented by integers (10-15: Herald, 20-25: Guardian, 30-35: Crusader, 40-45: Archon, 50-55: Legend, 60-65: Ancient, 70-75: Divine, 80-85: Immortal). Each increment represents an additional star. (optional)
     - parameter mmrAscending: (query) Order by average rank ascending (optional)
     - parameter mmrDescending: (query) Order by average rank descending (optional)
     - returns: RequestBuilder<[PublicMatchesResponse]> 
     */
    open class func getPublicMatchesWithRequestBuilder(lessThanMatchId: Int? = nil, minRank: Int? = nil, maxRank: Int? = nil, mmrAscending: Int? = nil, mmrDescending: Int? = nil) -> RequestBuilder<[PublicMatchesResponse]> {
        let localVariablePath = "/publicMatches"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "less_than_match_id": (wrappedValue: lessThanMatchId?.encodeToJSON(), isExplode: true),
            "min_rank": (wrappedValue: minRank?.encodeToJSON(), isExplode: true),
            "max_rank": (wrappedValue: maxRank?.encodeToJSON(), isExplode: true),
            "mmr_ascending": (wrappedValue: mmrAscending?.encodeToJSON(), isExplode: true),
            "mmr_descending": (wrappedValue: mmrDescending?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[PublicMatchesResponse]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
