//
// TeamsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class TeamsAPI {

    /**
     GET /teams
     
     - parameter page: (query) Page number, zero indexed. Each page returns up to 1000 entries. (optional)
     - returns: [TeamObjectResponse]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getTeams(page: Int? = nil) async throws -> [TeamObjectResponse] {
        return try await getTeamsWithRequestBuilder(page: page).execute().body
    }

    /**
     GET /teams
     - GET /teams
     - Get team data
     - parameter page: (query) Page number, zero indexed. Each page returns up to 1000 entries. (optional)
     - returns: RequestBuilder<[TeamObjectResponse]> 
     */
    open class func getTeamsWithRequestBuilder(page: Int? = nil) -> RequestBuilder<[TeamObjectResponse]> {
        let localVariablePath = "/teams"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[TeamObjectResponse]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     GET /teams/{team_id}
     
     - parameter teamId: (path) Team ID 
     - returns: TeamObjectResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getTeamsByTeamId(teamId: Int) async throws -> TeamObjectResponse {
        return try await getTeamsByTeamIdWithRequestBuilder(teamId: teamId).execute().body
    }

    /**
     GET /teams/{team_id}
     - GET /teams/{team_id}
     - Get data for a team
     - parameter teamId: (path) Team ID 
     - returns: RequestBuilder<TeamObjectResponse> 
     */
    open class func getTeamsByTeamIdWithRequestBuilder(teamId: Int) -> RequestBuilder<TeamObjectResponse> {
        var localVariablePath = "/teams/{team_id}"
        let teamIdPreEscape = "\(APIHelper.mapValueToPathItem(teamId))"
        let teamIdPostEscape = teamIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{team_id}", with: teamIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<TeamObjectResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     GET /teams/{team_id}/heroes
     
     - parameter teamId: (path) Team ID 
     - returns: TeamHeroesResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getTeamsByTeamIdSelectHeroes(teamId: Int) async throws -> TeamHeroesResponse {
        return try await getTeamsByTeamIdSelectHeroesWithRequestBuilder(teamId: teamId).execute().body
    }

    /**
     GET /teams/{team_id}/heroes
     - GET /teams/{team_id}/heroes
     - Get heroes for a team
     - parameter teamId: (path) Team ID 
     - returns: RequestBuilder<TeamHeroesResponse> 
     */
    open class func getTeamsByTeamIdSelectHeroesWithRequestBuilder(teamId: Int) -> RequestBuilder<TeamHeroesResponse> {
        var localVariablePath = "/teams/{team_id}/heroes"
        let teamIdPreEscape = "\(APIHelper.mapValueToPathItem(teamId))"
        let teamIdPostEscape = teamIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{team_id}", with: teamIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<TeamHeroesResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     GET /teams/{team_id}/matches
     
     - parameter teamId: (path) Team ID 
     - returns: TeamMatchObjectResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getTeamsByTeamIdSelectMatches(teamId: Int) async throws -> TeamMatchObjectResponse {
        return try await getTeamsByTeamIdSelectMatchesWithRequestBuilder(teamId: teamId).execute().body
    }

    /**
     GET /teams/{team_id}/matches
     - GET /teams/{team_id}/matches
     - Get matches for a team
     - parameter teamId: (path) Team ID 
     - returns: RequestBuilder<TeamMatchObjectResponse> 
     */
    open class func getTeamsByTeamIdSelectMatchesWithRequestBuilder(teamId: Int) -> RequestBuilder<TeamMatchObjectResponse> {
        var localVariablePath = "/teams/{team_id}/matches"
        let teamIdPreEscape = "\(APIHelper.mapValueToPathItem(teamId))"
        let teamIdPostEscape = teamIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{team_id}", with: teamIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<TeamMatchObjectResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     GET /teams/{team_id}/players
     
     - parameter teamId: (path) Team ID 
     - returns: TeamPlayersResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getTeamsByTeamIdSelectPlayers(teamId: Int) async throws -> TeamPlayersResponse {
        return try await getTeamsByTeamIdSelectPlayersWithRequestBuilder(teamId: teamId).execute().body
    }

    /**
     GET /teams/{team_id}/players
     - GET /teams/{team_id}/players
     - Get players who have played for a team
     - parameter teamId: (path) Team ID 
     - returns: RequestBuilder<TeamPlayersResponse> 
     */
    open class func getTeamsByTeamIdSelectPlayersWithRequestBuilder(teamId: Int) -> RequestBuilder<TeamPlayersResponse> {
        var localVariablePath = "/teams/{team_id}/players"
        let teamIdPreEscape = "\(APIHelper.mapValueToPathItem(teamId))"
        let teamIdPostEscape = teamIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{team_id}", with: teamIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<TeamPlayersResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
