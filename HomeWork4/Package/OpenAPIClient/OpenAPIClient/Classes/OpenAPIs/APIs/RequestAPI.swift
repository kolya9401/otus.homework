//
// RequestAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class RequestAPI {

    /**
     GET /request/{jobId}
     
     - parameter jobId: (path) The job ID to query. 
     - returns: AnyCodable
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRequestByJobId(jobId: String) async throws -> AnyCodable {
        return try await getRequestByJobIdWithRequestBuilder(jobId: jobId).execute().body
    }

    /**
     GET /request/{jobId}
     - GET /request/{jobId}
     - Get parse request state
     - parameter jobId: (path) The job ID to query. 
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func getRequestByJobIdWithRequestBuilder(jobId: String) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/request/{jobId}"
        let jobIdPreEscape = "\(APIHelper.mapValueToPathItem(jobId))"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     POST /request/{match_id}
     
     - parameter matchId: (path)  
     - returns: AnyCodable
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func postRequestByJobId(matchId: Int) async throws -> AnyCodable {
        return try await postRequestByJobIdWithRequestBuilder(matchId: matchId).execute().body
    }

    /**
     POST /request/{match_id}
     - POST /request/{match_id}
     - Submit a new parse request. This call counts as 10 calls for rate limit (but not billing) purposes.
     - parameter matchId: (path)  
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func postRequestByJobIdWithRequestBuilder(matchId: Int) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/request/{match_id}"
        let matchIdPreEscape = "\(APIHelper.mapValueToPathItem(matchId))"
        let matchIdPostEscape = matchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{match_id}", with: matchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
