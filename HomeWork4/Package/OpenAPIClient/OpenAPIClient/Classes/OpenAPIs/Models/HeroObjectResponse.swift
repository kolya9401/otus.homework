//
// HeroObjectResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct HeroObjectResponse: Codable, JSONEncodable, Hashable {

    /** The ID value of the hero played */
    public var id: Int
    /** Dota hero command name */
    public var name: String?
    /** Hero name */
    public var localizedName: String?
    /** Hero primary shorthand attribute name, e.g. 'agi' */
    public var primaryAttr: String?
    /** Hero attack type, either 'Melee' or 'Ranged' */
    public var attackType: String?
    public var roles: [String]?

    public init(id: Int, name: String? = nil, localizedName: String? = nil, primaryAttr: String? = nil, attackType: String? = nil, roles: [String]? = nil) {
        self.id = id
        self.name = name
        self.localizedName = localizedName
        self.primaryAttr = primaryAttr
        self.attackType = attackType
        self.roles = roles
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case localizedName = "localized_name"
        case primaryAttr = "primary_attr"
        case attackType = "attack_type"
        case roles
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(localizedName, forKey: .localizedName)
        try container.encodeIfPresent(primaryAttr, forKey: .primaryAttr)
        try container.encodeIfPresent(attackType, forKey: .attackType)
        try container.encodeIfPresent(roles, forKey: .roles)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension HeroObjectResponse: Identifiable {}
