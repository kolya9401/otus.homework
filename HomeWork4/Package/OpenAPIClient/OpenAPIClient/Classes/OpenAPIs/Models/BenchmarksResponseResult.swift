//
// BenchmarksResponseResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** result */
public struct BenchmarksResponseResult: Codable, JSONEncodable, Hashable {

    public var goldPerMin: [BenchmarksResponseResultGoldPerMinInner]?
    public var xpPerMin: [BenchmarksResponseResultGoldPerMinInner]?
    public var killsPerMin: [BenchmarksResponseResultGoldPerMinInner]?
    public var lastHitsPerMin: [BenchmarksResponseResultGoldPerMinInner]?
    public var heroDamagePerMin: [BenchmarksResponseResultGoldPerMinInner]?
    public var heroHealingPerMin: [BenchmarksResponseResultGoldPerMinInner]?
    public var towerDamage: [BenchmarksResponseResultTowerDamageInner]?

    public init(goldPerMin: [BenchmarksResponseResultGoldPerMinInner]? = nil, xpPerMin: [BenchmarksResponseResultGoldPerMinInner]? = nil, killsPerMin: [BenchmarksResponseResultGoldPerMinInner]? = nil, lastHitsPerMin: [BenchmarksResponseResultGoldPerMinInner]? = nil, heroDamagePerMin: [BenchmarksResponseResultGoldPerMinInner]? = nil, heroHealingPerMin: [BenchmarksResponseResultGoldPerMinInner]? = nil, towerDamage: [BenchmarksResponseResultTowerDamageInner]? = nil) {
        self.goldPerMin = goldPerMin
        self.xpPerMin = xpPerMin
        self.killsPerMin = killsPerMin
        self.lastHitsPerMin = lastHitsPerMin
        self.heroDamagePerMin = heroDamagePerMin
        self.heroHealingPerMin = heroHealingPerMin
        self.towerDamage = towerDamage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case goldPerMin = "gold_per_min"
        case xpPerMin = "xp_per_min"
        case killsPerMin = "kills_per_min"
        case lastHitsPerMin = "last_hits_per_min"
        case heroDamagePerMin = "hero_damage_per_min"
        case heroHealingPerMin = "hero_healing_per_min"
        case towerDamage = "tower_damage"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(goldPerMin, forKey: .goldPerMin)
        try container.encodeIfPresent(xpPerMin, forKey: .xpPerMin)
        try container.encodeIfPresent(killsPerMin, forKey: .killsPerMin)
        try container.encodeIfPresent(lastHitsPerMin, forKey: .lastHitsPerMin)
        try container.encodeIfPresent(heroDamagePerMin, forKey: .heroDamagePerMin)
        try container.encodeIfPresent(heroHealingPerMin, forKey: .heroHealingPerMin)
        try container.encodeIfPresent(towerDamage, forKey: .towerDamage)
    }
}

