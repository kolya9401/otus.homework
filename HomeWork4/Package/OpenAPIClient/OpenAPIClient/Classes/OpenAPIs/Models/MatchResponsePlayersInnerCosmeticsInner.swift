//
// MatchResponsePlayersInnerCosmeticsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MatchResponsePlayersInnerCosmeticsInner: Codable, JSONEncodable, Hashable {

    public var itemId: Int?
    /** name */
    public var name: String?
    public var prefab: String?
    public var creationDate: Date?
    public var imageInventory: String?
    public var imagePath: String?
    public var itemDescription: String?
    public var itemName: String?
    public var itemRarity: String?
    public var itemTypeName: String?
    public var usedByHeroes: String?

    public init(itemId: Int? = nil, name: String? = nil, prefab: String? = nil, creationDate: Date? = nil, imageInventory: String? = nil, imagePath: String? = nil, itemDescription: String? = nil, itemName: String? = nil, itemRarity: String? = nil, itemTypeName: String? = nil, usedByHeroes: String? = nil) {
        self.itemId = itemId
        self.name = name
        self.prefab = prefab
        self.creationDate = creationDate
        self.imageInventory = imageInventory
        self.imagePath = imagePath
        self.itemDescription = itemDescription
        self.itemName = itemName
        self.itemRarity = itemRarity
        self.itemTypeName = itemTypeName
        self.usedByHeroes = usedByHeroes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case itemId = "item_id"
        case name
        case prefab
        case creationDate = "creation_date"
        case imageInventory = "image_inventory"
        case imagePath = "image_path"
        case itemDescription = "item_description"
        case itemName = "item_name"
        case itemRarity = "item_rarity"
        case itemTypeName = "item_type_name"
        case usedByHeroes = "used_by_heroes"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(itemId, forKey: .itemId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(prefab, forKey: .prefab)
        try container.encodeIfPresent(creationDate, forKey: .creationDate)
        try container.encodeIfPresent(imageInventory, forKey: .imageInventory)
        try container.encodeIfPresent(imagePath, forKey: .imagePath)
        try container.encodeIfPresent(itemDescription, forKey: .itemDescription)
        try container.encodeIfPresent(itemName, forKey: .itemName)
        try container.encodeIfPresent(itemRarity, forKey: .itemRarity)
        try container.encodeIfPresent(itemTypeName, forKey: .itemTypeName)
        try container.encodeIfPresent(usedByHeroes, forKey: .usedByHeroes)
    }
}

